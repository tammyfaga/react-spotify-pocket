{"ast":null,"code":"var _jsxFileName = \"/home/tammy/codenation/react-17/src/containers/PrivateRoute/PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\n\nconst PrivateRoute = ({\n  comp: Component,\n  ...rest\n}) => {\n  const isLogged = useSelector(state => state.auth.isLogged);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isLogged ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/tammy/codenation/react-17/src/containers/PrivateRoute/PrivateRoute.jsx"],"names":["React","Route","Redirect","useSelector","PrivateRoute","comp","Component","rest","isLogged","state","auth","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,KADF,EAEEC,QAFF,QAGO,kBAHP;AAIA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEC,SAAR;AAAmB,KAAGC;AAAtB,CAAD,KAAkC;AACrD,QAAMC,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,QAArB,CAA5B;AAEA,sBACE,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,MAAM,EAAEI,KAAK,IAC5B,CAACH,QAAD,gBACK,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,gBAEK,oBAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CAVD;;AAYA,eAAeP,YAAf","sourcesContent":["import React from 'react';\n\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\n\nconst PrivateRoute = ({ comp: Component, ...rest }) => {\n  const isLogged = useSelector(state => state.auth.isLogged);\n\n  return (\n    <Route {...rest} render={props =>\n      !isLogged\n        ? (<Redirect to=\"/\" />)\n        : (<Component {...props} />)\n    } />\n  );\n}\n\nexport default PrivateRoute;\n\n"]},"metadata":{},"sourceType":"module"}